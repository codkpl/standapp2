{"version":3,"sources":["panels/Home.js","panels/Persik.js","img/persik.png","App.js","index.js"],"names":["React","Component","Home","propTypes","id","PropTypes","string","isRequired","fetchedUser","shape","photo_200","first_name","last_name","city","title","Persik","props","go","Panel","PanelHeader","Group","header","Header","mode","Cell","before","Avatar","src","description","Tabbar","TabbarItem","onClick","text","indicator","Counter","size","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"wrBAqBsBA,IAAMC,UAwE5BC,KAAKC,UAAY,CAChBC,GAAIC,IAAUC,OAAOC,WACrBC,YAAaH,IAAUI,MAAM,CAC5BC,UAAWL,IAAUC,OACrBK,WAAYN,IAAUC,OACtBM,UAAWP,IAAUC,OACrBO,KAAMR,IAAUI,MAAM,CACrBK,MAAOT,IAAUC,YAKLJ,WCnCAa,GCtEA,I,ODuBA,SAACC,EAAOR,EAAaS,GAArB,OACd,kBAACC,EAAA,EAAD,CAAOd,GAAIY,EAAMZ,IAChB,kBAACe,EAAA,EAAD,mDAECX,GACD,kBAACY,EAAA,EAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,aAAb,qCACd,kBAACC,EAAA,EAAD,CACCC,OAAQjB,EAAYE,UAAY,kBAACgB,EAAA,EAAD,CAAQC,IAAKnB,EAAYE,YAAe,KACxEkB,YAAapB,EAAYK,MAAQL,EAAYK,KAAKC,MAAQN,EAAYK,KAAKC,MAAQ,IAFpF,UAIKN,EAAYG,WAJjB,YAI+BH,EAAYI,aAI5C,kBAACiB,EAAA,EAAD,KACM,kBAACC,EAAA,EAAD,CAAYC,QAASd,EAAIe,KAAK,8CAC5B,kBAAC,IAAD,OAGP,kBAACF,EAAA,EAAD,CAAYG,UAAW,kBAACC,EAAA,EAAD,CAASC,KAAK,IAAIZ,KAAK,aAAvB,OAAkDS,KAAK,4BAC7E,kBAAC,IAAD,OAGI,kBAACF,EAAA,EAAD,CAAYE,KAAK,8CACrB,kBAAC,IAAD,OAEC,kBAACF,EAAA,EAAD,CAAYE,KAAK,sBAClB,kBAAC,IAAD,WERWI,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEV7B,EAFU,KAEGgC,EAFH,OAGWH,mBAAS,kBAACI,EAAA,EAAD,CAAeN,KAAK,WAHxC,mBAGVO,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM5C,EAAK,SAAA6C,GACVvB,EAAeuB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM3B,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMtC,GAAG,OAAOI,YAAaA,EAAaS,GAAIA,IAC9C,kBAAC,EAAD,CAAQb,GAAG,SAASa,GAAIA,MC7B3B6B,IAAOC,KAAK,gBAEZmB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.7d603257.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter';\nimport SimpleCell from '@vkontakte/vkui/dist/components/SimpleCell/SimpleCell';\n\nimport { Icon28UserCircleOutline } from '@vkontakte/icons';\nimport { Icon28MenuOutline } from '@vkontakte/icons';\nimport { Icon28HomeOutline } from '@vkontakte/icons';\nimport { Icon28GameOutline } from '@vkontakte/icons';\n\nclass Example extends React.Component {\n\n    constructor() {\n      this.state = {\n        activePanel: 'homepage',\n      };\n    }\n\n    render() {\n      return (\n        <View activePanel={this.state.activePanel}>\n          <Panel id=\"homepage\">\n\t\t<PanelHeader>Главная</PanelHeader>\n\n\t\t<Group header={<Header mode=\"secondary\">Тут будут кейсы...</Header>}></Group>\n\n\t\t<Tabbar>\n      \t\t<TabbarItem text=\"Главная\">\n        \t\t<Icon28HomeOutline />\n      \t\t</TabbarItem>\n\n\t\t\t<TabbarItem indicator={<Counter size=\"s\" mode=\"prominent\">NEW</Counter>} text=\"Игры\">\n\t\t\t\t<Icon28GameOutline />\n\t\t\t</TabbarItem>\n\t\t\t\n      \t\t<TabbarItem onClick={() => this.setState({ activePanel: 'userpage' })} text=\"Профиль\">\n\t\t\t\t<Icon28UserCircleOutline />\n\t\t\t</TabbarItem>\n\t  \t\t<TabbarItem text=\"Ещё\">\n\t\t\t\t<Icon28MenuOutline />\n\t\t\t</TabbarItem>\n    \t</Tabbar>\n\n\t</Panel>\n\n\t<Panel id=\"userpage\">\n\t\t<PanelHeader>Профиль</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">Ваш профиль</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Tabbar>\n\t\t\t<TabbarItem onClick={() => navigator.go(\"Home\")} text=\"Главная\">\n\t\t\t\t<Icon28HomeOutline />\n\t\t\t</TabbarItem>\n\n\t\t\t<TabbarItem indicator={<Counter size=\"s\" mode=\"prominent\">NEW</Counter>} text=\"Игры\">\n\t\t\t\t<Icon28GameOutline />\n\t\t\t</TabbarItem>\n\n\t\t\t<TabbarItem text=\"Профиль\">\n\t\t\t\t<Icon20UserCircleOutline />\n\t\t\t</TabbarItem>\n\t\t\t<TabbarItem text=\"Ещё\">\n\t\t\t\t<Icon28MenuOutline />\n\t\t\t</TabbarItem>\n\t\t</Tabbar>\n\n\t</Panel>\n        </View>\n      )\n    }\n  }\n\n  <Example />\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nimport { Icon28UserCircleOutline } from '@vkontakte/icons';\nimport { Icon28MenuOutline } from '@vkontakte/icons';\nimport { Icon28HomeOutline } from '@vkontakte/icons';\nimport { Icon28GameOutline } from '@vkontakte/icons';\n\nconst Persik = (props, fetchedUser, go) => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader>Профиль</PanelHeader>\n\t\t\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Tabbar>\n      \t\t<TabbarItem onClick={go} text=\"Главная\">\n        \t\t<Icon28HomeOutline />\n      \t\t</TabbarItem>\n\n\t\t\t<TabbarItem indicator={<Counter size=\"s\" mode=\"prominent\">NEW</Counter>} text=\"Игры\">\n\t\t\t\t<Icon28GameOutline />\n\t\t\t</TabbarItem>\n\n      \t\t<TabbarItem text=\"Профиль\">\n\t\t\t\t<Icon28UserCircleOutline />\n\t\t\t</TabbarItem>\n\t  \t\t<TabbarItem text=\"Ещё\">\n\t\t\t\t<Icon28MenuOutline />\n\t\t\t</TabbarItem>\n    \t</Tabbar>\n\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Persik;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}